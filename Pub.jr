import edu.ucdavis.jr.*;
import java.util.ArrayList;
import java.util.Collection;

/**
 * Central controlling class for a pub simulation.
 * Starts all processes, generates statistics.
 * @author Jesper Josefsson
 * @author Anmar Khazal
 */

public class Pub {
  
  private cap void () closingAlarm;
  private cap void (cap Resource (Constants.Order)) orderQueue;
  private cap void (cap void()) handshakeQueue;
  private cap void () tap;
  private Clock clock;
  private Landlord landlord;
  
  ArrayList<Table> tables;
  
  public Pub () {
    closingAlarm = new op void();
    orderQueue = new op void (cap Resource (Constants.Order));
    tap = new op void();
    tables = new ArrayList<Table>();
    initialize();
  }
  
  public void initialize() {
    
    clock = new Clock(30, new MyTime(18, 0, 0));
    
    for (int i = 0; i < Constants.N_OF_TABLES; i++ ) {
      tables.add(new Table()); 
    }
    
    Cupboard c = new Cupboard();
    new Assistant(tables);
    new Barmaid(orderQueue, tap, c.refGlass(), c.refCup());
    landlord = new Landlord(closingAlarm, orderQueue, tap, c.refGlass(), c.refCup());
    
    handshakeQueue = landlord.getHandShakeQueue();
    
    send tap();
  }
  
  process addCustomer {
    while (true) {
      new Customer(orderQueue, handshakeQueue, tables.get((int) Math.random()*Constants.N_OF_TABLES));
      JR.nap(Constants.CUSTOMER_DROPINTIME); // <------------ needs to change, has to depend on Clock.jr
      System.out.println("Added a customer");
    }
  }
  
  public static void main(String[] args) {
    Pub p = new Pub();
  }
}