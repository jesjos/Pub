import edu.ucdavis.jr.*;
import java.util.ArrayList;

public class Landlord extends Server {
  
  private cap void () closingAlarm;
  private cap void (cap void()) handshakeQueue;
  private ArrayList<cap void ()> customers; 
  
  public Landlord(cap void () closingAlarm,
                  cap void (cap Resource (Constants.Order)) orderQueue, 
                  cap void ()           tap,
                  cap Cupboard.Glass () getGlass,
                  cap Cupboard.Cup ()   serveCup
                  ) {
    super(orderQueue, tap, getGlass, serveCup);
    
    this.closingAlarm = closingAlarm;
    handshakeQueue = new op void (cap void ());
    customers = new ArrayList<cap void()>();
  }
  
  public cap void (cap void ()) getHandShakeQueue() {
    return handshakeQueue;
  }
  
  private process greet {
    cap void () customer;
    while (true) {
      receive handshakeQueue(customer);
      customers.add(customer);
      System.out.println("Received a customer");
    }
  }
  
  private process lastCall {
    while (true) {
      receive closingAlarm();
      for (cap void() c : customers)
        send c();
    }
  }
  
}