import edu.ucdavis.jr.*;
import java.util.ArrayList;

public class Landlord {
  
  private cap void (cap Resource (Constants.Order)) orderQueue;
  private cap void () closingAlarm;
  private cap void (cap void()) handshakeQueue;
  private ArrayList<cap void ()> customers; 
  
  public Landlord(cap void () closingAlarm, cap void () orderQueue) {
    this.orderQueue = orderQueue;
    this.closingAlarm = closingAlarm;
    handshakeQueue = new op void (cap void ());
    customers = new ArrayList<cap void()>();
  }
  
  public cap void (cap void ()) getHandShakeQueue() {
    return handshakeQueue;
  }
  
  process greet {
    cap void () customer;
    while (true) {
      receive handshakeQueue(customer);
      customers.add(customer);
    }
  }
  
  process checkForLastCall {
    while (true) {
      receive closingAlarm();
      for (cap void() c : customers)
        send c();
    }
  }
  
  private process serve {
    cap Resource (Constants.Order) orderChannel;
    
    while (true) {
      receive orderQueue(orderChannel);
      inni Resource orderChannel(Constants.Order order) {
        switch (order) {
          case BEER : System.out.println("BEER"); return new Constants.Beer();
          case CAPPU : System.out.println("CAPPU"); return new Constants.Cappu();
          case CHOCO : System.out.println("CHOCO"); return new Constants.Choco();
        }
        return ;
      }
    }
  }
  
}