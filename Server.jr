import edu.ucdavis.jr.*;

public class Server {
  
  protected cap void () tap;
  protected cap Resource (Constants.Order) orderQueue;
  protected cap ServingArea.Glass () getGlass;
  protected cap ServingArea.Cup () serveCup;
  protected cap void () closingTime;
  protected boolean closed;
  
  public Server (
    cap Resource (Constants.Order) orderQueue, 
    cap void ()           tap,
    cap ServingArea.Glass () getGlass,
    cap ServingArea.Cup ()   serveCup,
    cap void ()           closingTime
    ) {
    this.tap = tap;
    this.orderQueue = orderQueue;
    this.serveCup   = serveCup;
    this.getGlass = getGlass;
    this.closingTime = closingTime;
    closed = false;
  }
  
  private process serve {
    cap Resource (Constants.Order) orderChannel;
    
    while (true) {
      if (this instanceof Barmaid && closed)
        break;
      //receive orderQueue(orderChannel);
      inni Resource orderQueue(Constants.Order order) {
        System.out.println("Got an order");
        switch (order) {
          case BEER : System.out.println("BEER"); return getBeer();
          case CAPPU : System.out.println("CAPPU"); return getCappu();
          case CHOCO : System.out.println("CHOCO"); return getChoco();
        }
        return ;
      }
    }
  }
  
  private process checkForClosingTime {
    receive closingTime();
    closed = true;
  }
  
  protected ServingArea.Glass getBeer() {
    System.out.println("Servicing order");
    ServingArea.Glass glass = getGlass();
    receive tap();
    send tap();
    return glass;
    
  }
  protected ServingArea.Cup getCappu() {
    return new ServingArea.Cup();
  }
  protected ServingArea.Cup getChoco() {
    return new ServingArea.Cup();    
  }
}