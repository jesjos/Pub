import edu.ucdavis.jr.*;
import java.util.ArrayDeque;

public class Cupboard {
  
  private ArrayDeque<Glass> glasses;
  private ArrayDeque<Cup> cups;
  
  private op Glass getGlass();
  private op Cup getCup();
  private op void replaceGlass(Glass); 
  
  public Cupboard() {
    glasses = new ArrayDeque<Glass>();
    cups = new ArrayDeque<Cup>();
    
    initialize();
  }
  
  public void initialize() {
    for (int i = 0; i < Constants.GLASSES; i++)
      glasses.add(new Glass());
    for (int i = 0; i < Constants.CUPS; i++)
      cups.add(new Cup());
  }
  
  public cap Glass () refGlass() {
    cap Glass () ref = getGlass;
    return ref;
  }
  
  public cap Cup () refCup() {
    cap Cup () ref = getCup;
    return ref;
  }
  
  public cap void (Glass) getReplaceGlass() {
    cap void (Glass) ref = replaceGlass;
    return ref;
  }
  
  public process serveGlasses {
    while (true) {
      inni Glass getGlass() st glasses.isEmpty() {
        return glasses.pop();
      }
      [] void replaceGlass(Glass g) {
        glasses.add(g);
      }
    }
  }
  
  process serveCups {
    
  }
  
  process serveMilk {
    
  }
  
  process serveChocolate {
    
  }
  
  // Resource classes
  
  public static class Glass implements Resource {
    
  }
  
  public static class Cup implements Resource {
    
  }
  
  public static class Milk implements Resource {
    
  }
  
  public static class Chocolate implements Resource {
    
  }
}